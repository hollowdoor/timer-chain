{"version":3,"file":"more-events.min.js","sources":["../src/index.js"],"sourcesContent":["class Handler {\n    constructor(name, listener, matchListener = null){\n        this.name = name;\n        this.matchListener = this.listener = listener;\n        if(matchListener !== null){\n            this.matchListener = matchListener;\n        }\n    }\n}\n\nclass MoreEvents {\n    constructor(context){\n        this.listeners = {};\n        this.__context = context === void 0 ? this : context;\n    }\n    addListener(name, listener, matchListener){\n        if(this.listeners[name] === void 0){\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push(new Handler(name, listener, matchListener));\n\n        return this;\n    }\n    removeListener(name, listener){\n        if(this.listeners[name] === void 0 || !this.listeners[name].length)\n            return this;\n\n        for(let i=0; i<this.listeners[name].length; i++){\n            let current = this.listeners[name][i];\n            //The matchListener might be different\n            //than the actual listener\n            if(current.matchListener === listener){\n                this.listeners[name].splice(i, 1);\n                --i;\n            }\n        }\n\n        return this;\n    }\n    emitListeners(name, ...args){\n        if(this.listeners[name] === void 0 || !this.listeners[name].length) return;\n\n        for(let i=0; i<this.listeners[name].length; i++){\n            (this.listeners[name][i].listener)\n            .apply(this.__context, args);\n        }\n        return this;\n    }\n    removeAll(name){\n        delete this.listeners[name];\n    }\n    dispose(){\n        this.listeners = this.__context = null;\n    }\n}\n\nclass Emitter extends MoreEvents {\n    constructor(context){\n        super(context);\n    }\n    on(name, listener){\n        return this.addListener(name, listener);\n    }\n    off(name, listener){\n        return this.removeListener(name, listener);\n    }\n    one(name, listener){\n        function once(){\n            listener.apply(this, arguments);\n            return this.off(name, once);\n        }\n        return this.on(name, onceListener);\n    }\n    emit(name, ...args){\n        return this.emitListeners(name, ...args);\n    }\n    clear(name){\n        this.removeAll(name);\n    }\n}\n\n\nexport { Emitter };\n"],"names":["Handler","name","listener","matchListener","this","MoreEvents","context","listeners","__context","addListener","push","removeListener","length","let","i","this$1","splice","emitListeners","apply","args","removeAll","dispose","Emitter","super","on","off","one","onceListener","emit","ref","clear"],"mappings":"0BAAA,IAAMA,EAAQ,SACEC,EAAMC,EAAUC,kBAAgB,MAC5CC,KAASH,KAAOA,EAChBG,KAASD,cAAgBC,KAAKF,SAAWA,EAChB,OAAlBC,IACHC,KAASD,cAAgBA,IAK3BE,EAAW,SACDC,GACZF,KAASG,aACTH,KAASI,eAAwB,IAAZF,EAAqBF,KAAOE,GAErDD,YAAII,qBAAYR,EAAMC,EAAUC,GAM5B,YALgC,IAAzBC,KAAKG,UAAUN,KAClBG,KAASG,UAAUN,OAEvBG,KAASG,UAAUN,GAAMS,KAAK,IAAIV,EAAQC,EAAMC,EAAUC,IAE/CC,MAEfC,YAAIM,wBAAeV,EAAMC,cACrB,QAAgC,IAAzBE,KAAKG,UAAUN,KAAqBG,KAAKG,UAAUN,GAAMW,OACxD,OAAOR,KAEf,IAAQS,IAAIC,EAAE,EAAGA,EAAEV,KAAKG,UAAUN,GAAMW,OAAQE,IAC1BV,EAAKG,UAAUN,GAAMa,GAGxBX,gBAAkBD,IAC7Ba,EAASR,UAAUN,GAAMe,OAAOF,EAAG,KAC7BA,GAId,OAAWV,MAEfC,YAAIY,uBAAchB,wEACd,QAAgC,IAAzBG,KAAKG,UAAUN,IAAqBG,KAAKG,UAAUN,GAAMW,OAAhE,CAEA,IAAQC,IAAIC,EAAE,EAAGA,EAAEV,KAAKG,UAAUN,GAAMW,OAAQE,IACvCV,EAAKG,UAAUN,GAAMa,GAAW,SAChCI,MAAMd,EAAKI,UAAWW,GAE/B,OAAWf,OAEfC,YAAIe,mBAAUnB,UACCG,KAAKG,UAAUN,IAE9BI,YAAIgB,mBACAjB,KAASG,UAAYH,KAAKI,UAAY,MAI1C,IAAMc,cAA2B,WACjBhB,GACRiB,OAAMnB,KAAAE,iGAEVgB,YAAAE,YAAGvB,EAAMC,GACL,OAAOE,KAAKK,YAAYR,EAAMC,IAElCoB,YAAAG,aAAIxB,EAAMC,GACN,OAAOE,KAAKO,eAAeV,EAAMC,IAErCoB,YAAAI,aAAIzB,EAAMC,GACN,OAIOE,KAAKoB,GAAGvB,EAAM0B,eAEzBL,YAAAM,cAAK3B,iEACD,SAAOG,MAAKa,oBAAcY,GAAA5B,UAAMkB,WAEpCG,YAAAQ,eAAM7B,GACFG,KAAKgB,UAAUnB,OArBDI"}